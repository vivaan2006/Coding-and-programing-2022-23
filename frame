import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class MyFrame extends JFrame implements ActionListener {

    CalendarProgram calendar;
    private JMenuBar MenuBar;
    private JMenu Time;
    private JMenu Progress;
    private JMenu Leaderboard;
    private JMenu Prizes;
    private JMenu pastWins;
    private JMenuItem PW;
    private JMenuItem tips;
    private  JMenu Calender;
    private JMenu Help;
    private JMenuItem FAQs;
    private JMenuItem Logout;
    private JMenuItem Events;
    MyFrame() {
        JFrame Frame = new JFrame();
        //options//
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(900, 600);
        this.setLayout(new FlowLayout());
        MenuBar = new JMenuBar();

        Time = new JMenu("Add Time"); //sort of like a shopping cart, based on the events attended, attach points.
        Time.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));

        Progress = new JMenu("My Progress"); //includes points//
        Progress.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));

        Leaderboard = new JMenu("Leaderboard");
        Leaderboard.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));

        Prizes = new JMenu("Prizes");
        Prizes.setPreferredSize(new Dimension(70,Time.getPreferredSize().width));


        pastWins = new JMenu("Past Winners"); //include random and most points//
        pastWins.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));
        PW = new JMenuItem("View Past Winners");
        tips = new JMenuItem("Tips to Win");

        Calender = new JMenu("Calendar"); //basically events rn//
        Calender.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));
        Events = new JMenu("Calendar");


        Help = new JMenu("Help");
        Help.setPreferredSize(new Dimension(90,Time.getPreferredSize().width));
        FAQs = new JMenuItem("FAQ");
        Logout = new JMenuItem("Logout");

        //action listeners//
        Time.addActionListener(this);

        Progress.addActionListener(this);

        Leaderboard.addActionListener(this);

        Prizes.addActionListener(this);

        pastWins.addActionListener(this);
        PW.addActionListener(this);
        tips.addActionListener(this);


        Calender.addActionListener(this);
        Events.addActionListener(this);



        Help.addActionListener(this);
        FAQs.addActionListener(this);
        Logout.addActionListener(this);
        //menubar add//

        Help.add(FAQs);
        Help.add(Logout);
        pastWins.add(PW);
        pastWins.add(tips);

        Calender.add(Events);


        MenuBar.add(Time);

        MenuBar.add(Progress);

        MenuBar.add(Leaderboard);

        MenuBar.add(Prizes);

        MenuBar.add(pastWins);

        MenuBar.add(Calender);

        MenuBar.add(Help);

        this.setJMenuBar(MenuBar);
        this.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == Time) {    //change to menu item
            System.out.println("Hallo");
        }
        if (e.getSource() == Progress) { //change to menu item
            System.out.println("Hallo");
        }
        if (e.getSource() == Leaderboard) {      //change to menu item
            System.out.println("Hallo");
        }
        if (e.getSource() == Prizes) {
            System.out.println("Hallo");
        }
        if (e.getSource() == PW) {
            System.out.println("Past winners page");
        }
        if (e.getSource() == Events) {
           this.dispose();
        calendar = new CalendarProgram();
        }

        if (e.getSource() == Logout) {
            this.dispose();
            new GUI();
        }
        if (e.getSource() == FAQs) {
            System.out.println("Lead to FAQ page");
        }

    }
}














          
      
